def shouldRelease = true

pipeline {
   agent any
   
   stages {
      stage('Initialize') {
         steps {
            script {
               currentBuild.displayName = "#${env.BUILD_NUMBER} - diva-client"
            }
         }
      }
      stage("clone") {
         steps {
            script {
               withCredentials([
               string(credentialsId: '9af4f5c5-4a09-4bbe-9436-2c102765d85b', variable: 'TOKEN'),
               string(credentialsId: '04bc33f5-abdd-4486-b43b-a5900f6fc080', variable: 'USERNAME')
               ]) {
                  sh '''
                  rm -rf "diva-client"
                  git clone https://$USERNAME:$TOKEN@github.com/lsu-ub-uu/diva-client.git "diva-client"
                  '''
               }
            }
         }
      }
      stage("Make sure it is not a release commit") {
         steps {
            script {
               dir("diva-client") {
                  def commitMessage = sh(script: "git log -1 --pretty=%B", returnStdout: true).trim()
                  if (commitMessage.contains("[maven-release-plugin]")) {
                     echo("Release commit detected. Aborting.")
                     shouldRelease = false
                  }
               }
            }
         }
      }
      stage("Code quality checks") {
         when {
            expression { shouldRelease }
         }
         steps {
            script {
               dir("diva-client") {
                  sh 'npm ci'
                  sh 'npm run lint'
                  sh 'npm run stylelint'
                  sh 'npm run test:ci'
               }
            }
         }
      }
      stage("Release diva client") {
         steps {
            build job: 'cora-release-project-and-docker',
            wait: true,
            parameters: [
            string(name: 'PROJECT_NAME', value: "diva-client"),
            string(name: 'DOCKER_PROJECT_NAME', value: "diva-docker-divaclient"),
            ]
         }
      }
   }
   post {
      always {
         cleanWs()
      }
   }
}