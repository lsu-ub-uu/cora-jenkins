pipeline {
    agent any
    environment {
        projectsToUpdate = "";
    }
    stages {
        stage("user input"){
            steps{
                script {
                    /*def projectsToUpdate = input message: 'sdf', parameters: [text(defaultValue: '''cora-testrelease11
cora-testrelease111''', description: 'Project names to build', name: 'UB_PROJECT_NAMES')]
                    */
                    projectsToRelese = input message: 'Enter projects to release', 
                    	parameters: [text(defaultValue: 'cora-testrelease1, cora-testrelease2', 
                    	description: 'Project names to build  (comma separated)', 
                    	name: 'PROJECTS_TO_RELEASE', trim: true)]
                    projectsToUpdate = input message: 'Enter projects to update dependencies and possibly release', 
                    	parameters: [text(defaultValue: 'cora-testrelease1, cora-testrelease2', 
                    	description: 'Project names to build  (comma separated)', 
                    	name: 'PROJECTS_TO_UPDATE', trim: true)]
                    onlyCora = input message: 'Update only Cora dependencies', ok: 'Release!',
                            parameters: [choice(name: 'ONLY_CORA', choices: 'no\nyes', 
                            description: 'Which dependencies should be updated')]
                 	echo "Projects to release: $projectsToUpdate"
                    echo "Projects to update: $projectsToUpdate"
                    echo "Update only dependencies from Cora: $onlyCora"
                }
            }
        }
        
        stage("looping"){
            steps{
                script {
                    def splittedprojectsToUpdate = projectsToUpdate.split(',')
                    splittedprojectsToUpdate.each() {
                        def trimmed = it.trim()
                        def splittedTrimmed = trimmed.split(' ');
                        def project = splittedTrimmed[0].trim();
                        def branch = 'master';
                        if(splittedTrimmed.length > 1 && splittedTrimmed.length > 0){
                            branch = splittedTrimmed[1].trim();
                        }
                        echo "Project:$project"
                        echo "Branch:$branch"
                    
                        build job: 'cora-pipeline-release-updated-dependencies', 
                            parameters: [string(name: 'UB_PROJECT_NAME', value: "$project"),
                            string(name: 'UB_BRANCH_NAME', value: "${branch}")]
                    }
                }   
            }
        }
    }
    
    post {
        always {
            cleanWs()
        }
    }
} 